// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name FitSDK
import Combine
@_exported import FitSDK
import Foundation
import SafariServices
import Swift
import TerraiOS
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@propertyWrapper public class CustomObjectStore<T> where T : Swift.Decodable, T : Swift.Encodable {
  public init(key: Swift.String, store: any FitSDK.UserDefaultsProtocol)
  public var wrappedValue: T? {
    get
    set
  }
  @objc deinit
}
@propertyWrapper public class ObjectStore<T> {
  public init(key: Swift.String, store: any FitSDK.UserDefaultsProtocol)
  public var wrappedValue: T? {
    get
    set
  }
  @objc deinit
}
@objc public protocol UserDefaultsProtocol {
  @objc func value(forKey key: Swift.String) -> Any?
  @objc func string(forKey defaultName: Swift.String) -> Swift.String?
  @objc func bool(forKey defaultName: Swift.String) -> Swift.Bool
  @objc func setValue(_ value: Any?, forKey key: Swift.String)
  @objc func removeObject(forKey key: Swift.String)
  @objc func integer(forKey defaultName: Swift.String) -> Swift.Int
  @objc func double(forKey defaultName: Swift.String) -> Swift.Double
  @objc func dictionary(forKey defaultName: Swift.String) -> [Swift.String : Any]?
}
extension Foundation.UserDefaults : FitSDK.UserDefaultsProtocol {
}
public class FitSDKManager {
  public init()
  public func configure(with referenceId: Swift.String, authToken: Swift.String)
  public init(with merchantId: Swift.String)
  @objc deinit
}
